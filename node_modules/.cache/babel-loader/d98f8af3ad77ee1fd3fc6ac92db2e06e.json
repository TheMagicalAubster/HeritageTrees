{"ast":null,"code":"var _jsxFileName = \"/Users/aubreyblair-pattison/projects/heritageTrees/calgary-trees/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Component, useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport { render } from 'react-dom';\nimport axios from 'axios'; // import 'leaflet/dist/leaflet.css'\n//import Trees from './data/trees.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst position = [51.047, -114.050];\n\nconst treePositions = function App() {\n  _s();\n\n  const [trees, setTrees] = useState([]);\n  useEffect(() => {\n    getTheTrees();\n  }, []);\n\n  const getTheTrees = () => {\n    axios.get(\"https://data.calgary.ca/resource/tfs4-3wwa.json\").then(response => {\n      const allTrees = response.data;\n      allTrees.map((item, index) => console.log(item.point.coordinates[1], item.point.coordinates[0], index)); // allTrees.map((tree, index) => {console.log(tree.point.coordinates)})\n\n      setTrees(allTrees);\n    }).catch(error => console.error(`Error: ${error}`));\n  }; //trees.data.map((item) => console.log(item.point.coordinates));\n\n\n  if (trees.length > 0) {\n    return trees.map((tree, index) => {\n      // console.log(tree.point.coordinates);\n      // let position = tree.point.coordinates\n      return (\n        /*#__PURE__*/\n        // <div key={index}>\n        //   HAPPY TREES DANCE\n        // </div>\n        _jsxDEV(\"div\", {\n          id: \"map\",\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [51.047, -114.059],\n            zoom: 14,\n            scrollWheelZoom: true,\n            style: {\n              width: '50 vw',\n              height: '50vh'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: position,\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"popup here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      );\n    });\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"sorry, no trees yet, eh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } //   <>\n  //     <p>Hello, werld</p>\n  //     {/* {trees.data.map((item) => {\n  //       return(<li> {item.point.coordinates}</li>)\n  //     })} */}\n  //     <p trees={trees}>  </p>\n  //     {/* <p > Trees List </p> {trees.data.map((item, index) => <ol key={index}> Tree: {item.point.coordinates} </ol>)} */}\n  //   </>\n\n};\n\n_s(treePositions, \"TbARSVuEs6GMKMMSKkihpSrndP0=\");\n\nexport default App; // export class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: []\n//     };\n//   }\n//   componentDidMount() {\n//     axios.get(\"https://data.calgary.ca/resource/tfs4-3wwa.json\")\n//       .then(response => {\n//         const data = response.data;\n//         this.setState({ data })\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       })\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {this.state.map((item, index) => <TreeList key={index}{...item} />)}\n//       </div>\n//     )\n//   }\n// }\n// const TreeList = (props) => (\n//   <p> {props}</p>\n// )\n// render(<App />, document.getElementById('root'));\n// function App() {\n//   return (\n//     <>\n//     <div>\n//     <div id=\"map\"></div>\n//     </div>\n// <div id=\"map\">\n//    <MapContainer \n//       center={[51.047, -114.059]} \n//       zoom={14} \n//       scrollWheelZoom={false} \n//       style= {{width: '50 vw', height: '50vh'}}>\n//     <TileLayer\n//     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//     <Marker position={position}>\n//       <Popup>\n//         popup here\n//       </Popup>\n//     </Marker>\n//   </MapContainer>\n// </div>\n//       <Trees /> \n//     </>\n//   );\n// }","map":{"version":3,"names":["React","Component","useEffect","useState","MapContainer","TileLayer","Marker","Popup","useMap","render","axios","position","treePositions","App","trees","setTrees","getTheTrees","get","then","response","allTrees","data","map","item","index","console","log","point","coordinates","catch","error","length","tree","width","height"],"sources":["/Users/aubreyblair-pattison/projects/heritageTrees/calgary-trees/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { Component, useEffect, useState } from 'react';\nimport {MapContainer, TileLayer, Marker, Popup, useMap} from 'react-leaflet'\nimport { render } from 'react-dom';\nimport axios from 'axios';\n// import 'leaflet/dist/leaflet.css'\n//import Trees from './data/trees.js';\n\nconst position = [51.047, -114.050]\nconst treePositions =\n\nfunction App() {\n  const [trees, setTrees] = useState([])\n\n\n  useEffect(() => {\n    getTheTrees();\n  },[])\n\n  const getTheTrees = () => {\n    axios.get(\"https://data.calgary.ca/resource/tfs4-3wwa.json\")\n    .then((response) => {\n      const allTrees = response.data;\n      allTrees.map((item, index) => console.log(item.point.coordinates[1], item.point.coordinates[0], index)) \n      // allTrees.map((tree, index) => {console.log(tree.point.coordinates)})\n      setTrees(allTrees);\n    })\n    .catch(error => console.error(`Error: ${error}`));\n  }\n\n//trees.data.map((item) => console.log(item.point.coordinates));\n  \n\n  if(trees.length > 0) {\n    return(\n        trees.map((tree, index) => {\n          // console.log(tree.point.coordinates);\n          // let position = tree.point.coordinates\n        return(\n          // <div key={index}>\n          //   HAPPY TREES DANCE\n          // </div>\n          <div id=\"map\" key={index}>\n          <MapContainer \n              center={[51.047, -114.059]} \n              zoom={14} \n              scrollWheelZoom={true} \n              style= {{width: '50 vw', height: '50vh'}}>\n            <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={position}>\n              <Popup>\n                popup here\n              </Popup>\n            </Marker>\n          </MapContainer>\n        </div>\n        )\n      })\n    )\n  } else {\n    return (\n      <div>sorry, no trees yet, eh</div>\n    )\n  }\n  //   <>\n  //     <p>Hello, werld</p>\n  //     {/* {trees.data.map((item) => {\n  //       return(<li> {item.point.coordinates}</li>)\n  //     })} */}\n  //     <p trees={trees}>  </p>\n  //     {/* <p > Trees List </p> {trees.data.map((item, index) => <ol key={index}> Tree: {item.point.coordinates} </ol>)} */}\n  //   </>\n\n\n}\n\nexport default App;\n\n\n// export class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: []\n//     };\n//   }\n\n//   componentDidMount() {\n//     axios.get(\"https://data.calgary.ca/resource/tfs4-3wwa.json\")\n//       .then(response => {\n//         const data = response.data;\n//         this.setState({ data })\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       })\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {this.state.map((item, index) => <TreeList key={index}{...item} />)}\n//       </div>\n//     )\n//   }\n// }\n\n// const TreeList = (props) => (\n//   <p> {props}</p>\n// )\n\n// render(<App />, document.getElementById('root'));\n\n\n\n\n// function App() {\n\n//   return (\n//     <>\n//     <div>\n//     <div id=\"map\"></div>\n//     </div>\n    // <div id=\"map\">\n    //    <MapContainer \n    //       center={[51.047, -114.059]} \n    //       zoom={14} \n    //       scrollWheelZoom={false} \n    //       style= {{width: '50 vw', height: '50vh'}}>\n    //     <TileLayer\n    //     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    //     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    //     />\n    //     <Marker position={position}>\n    //       <Popup>\n    //         popup here\n    //       </Popup>\n    //     </Marker>\n    //   </MapContainer>\n    // </div>\n    \n//       <Trees /> \n//     </>\n\n\n\n//   );\n// }\n\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAAQC,YAAR,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,MAAhD,QAA6D,eAA7D;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;;AAEA,MAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,CAAC,OAAV,CAAjB;;AACA,MAAMC,aAAa,GAEnB,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;EAGAD,SAAS,CAAC,MAAM;IACdc,WAAW;EACZ,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMA,WAAW,GAAG,MAAM;IACxBN,KAAK,CAACO,GAAN,CAAU,iDAAV,EACCC,IADD,CACOC,QAAD,IAAc;MAClB,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;MACAD,QAAQ,CAACE,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiBC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAL,CAAWC,WAAX,CAAuB,CAAvB,CAAZ,EAAuCL,IAAI,CAACI,KAAL,CAAWC,WAAX,CAAuB,CAAvB,CAAvC,EAAkEJ,KAAlE,CAA9B,EAFkB,CAGlB;;MACAT,QAAQ,CAACK,QAAD,CAAR;IACD,CAND,EAOCS,KAPD,CAOOC,KAAK,IAAIL,OAAO,CAACK,KAAR,CAAe,UAASA,KAAM,EAA9B,CAPhB;EAQD,CATD,CARa,CAmBf;;;EAGE,IAAGhB,KAAK,CAACiB,MAAN,GAAe,CAAlB,EAAqB;IACnB,OACIjB,KAAK,CAACQ,GAAN,CAAU,CAACU,IAAD,EAAOR,KAAP,KAAiB;MACzB;MACA;MACF;QAAA;QACE;QACA;QACA;QACA;UAAK,EAAE,EAAC,KAAR;UAAA,uBACA,QAAC,YAAD;YACI,MAAM,EAAE,CAAC,MAAD,EAAS,CAAC,OAAV,CADZ;YAEI,IAAI,EAAE,EAFV;YAGI,eAAe,EAAE,IAHrB;YAII,KAAK,EAAG;cAACS,KAAK,EAAE,OAAR;cAAiBC,MAAM,EAAE;YAAzB,CAJZ;YAAA,wBAKE,QAAC,SAAD;cACA,WAAW,EAAC,yFADZ;cAEA,GAAG,EAAC;YAFJ;cAAA;cAAA;cAAA;YAAA,QALF,eASE,QAAC,MAAD;cAAQ,QAAQ,EAAEvB,QAAlB;cAAA,uBACE,QAAC,KAAD;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QATF;UAAA;YAAA;YAAA;YAAA;UAAA;QADA,GAAmBa,KAAnB;UAAA;UAAA;UAAA;QAAA;MAJF;IAsBD,CAzBC,CADJ;EA4BD,CA7BD,MA6BO;IACL,oBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAGD,CAvDY,CAwDb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAGD,CApED;;GAAMZ,a;;AAsEN,eAAeC,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AAIA;AACA"},"metadata":{},"sourceType":"module"}