{"ast":null,"code":"var _jsxFileName = \"/Users/aubreyblair-pattison/projects/heritageTrees/calgary-trees/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Component, useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport L from \"leaflet\"; // import 'leaflet/dist/leaflet.css'\n//import Trees from './data/trees.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst position = [51.047, -114.050];\nconst treePositions = [];\nconst icon = L.icon({\n  iconSize: [25, 41],\n  iconAnchor: [10, 41],\n  popupAnchor: [2, -40],\n  iconUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-shadow.png\"\n});\n\nconst getTheTrees = () => {\n  axios.get(\"https://data.calgary.ca/resource/tfs4-3wwa.json\").then(response => {\n    const allTrees = response.data;\n    allTrees.map((item, index) => {\n      let latLong = [];\n      latLong.push(item.point.coordinates[1]);\n      latLong.push(item.point.coordinates[0]);\n      treePositions.push(latLong);\n    }); //setTrees(allTrees);\n  }).catch(error => console.error(`Error: ${error}`));\n};\n\nfunction App() {\n  _s();\n\n  const [trees, setTrees] = useState([]);\n  useEffect(() => {\n    getTheTrees();\n  }, []); //console.log(treePositions[0])\n  //trees.data.map((item) => console.log(item.point.coordinates));\n\n  function TreeMarkers() {\n    return treePositions.map((coordinates, index) => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: coordinates,\n        icon: icon,\n        children: \" \"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    });\n  } // if(treePositions.length > 0) {\n  //   return (\n  //       // trees.map((treePositions, index) => {\n  //       //   // console.log(tree.point.coordinates);\n  //       //   // let position = tree.point.coordinates\n  //       // return(\n  //       //   // <div key={index}>\n  //       //   //   HAPPY TREES DANCE\n  //       //   // </div>\n  //       //   <div id=\"map\" key={index}>\n  //       //   <MapContainer \n  //       //       center={[51.047, -114.059]} \n  //       //       zoom={14} \n  //       //       scrollWheelZoom={true} \n  //       //       style= {{width: '50 vw', height: '50vh'}}>\n  //       //     <TileLayer\n  //       //     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  //       //     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  //       //     />\n  //       //     <Marker position={position}>\n  //       //       <Popup>\n  //       //         popup here\n  //       //       </Popup>\n  //       //     </Marker>\n  //       //   </MapContainer>\n  //       // </div>\n  //      )\n  // } else {\n  //   return (\n  //     <div>sorry, no trees yet, eh</div>\n  //   )\n  // }\n  // //   <>\n  // //     <p>Hello, werld</p>\n  // //     {/* {trees.data.map((item) => {\n  // //       return(<li> {item.point.coordinates}</li>)\n  // //     })} */}\n  // //     <p trees={trees}>  </p>\n  // //     {/* <p > Trees List </p> {trees.data.map((item, index) => <ol key={index}> Tree: {item.point.coordinates} </ol>)} */}\n  // //   </>\n\n}\n\n_s(App, \"TbARSVuEs6GMKMMSKkihpSrndP0=\");\n\n_c = App;\nexport default App; // export class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: []\n//     };\n//   }\n//   componentDidMount() {\n//     axios.get(\"https://data.calgary.ca/resource/tfs4-3wwa.json\")\n//       .then(response => {\n//         const data = response.data;\n//         this.setState({ data })\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       })\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {this.state.map((item, index) => <TreeList key={index}{...item} />)}\n//       </div>\n//     )\n//   }\n// }\n// const TreeList = (props) => (\n//   <p> {props}</p>\n// )\n// render(<App />, document.getElementById('root'));\n// function App() {\n//   return (\n//     <>\n//     <div>\n//     <div id=\"map\"></div>\n//     </div>\n// <div id=\"map\">\n//    <MapContainer \n//       center={[51.047, -114.059]} \n//       zoom={14} \n//       scrollWheelZoom={false} \n//       style= {{width: '50 vw', height: '50vh'}}>\n//     <TileLayer\n//     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//     />\n//     <Marker position={position}>\n//       <Popup>\n//         popup here\n//       </Popup>\n//     </Marker>\n//   </MapContainer>\n// </div>\n//       <Trees /> \n//     </>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","useEffect","useState","MapContainer","TileLayer","Marker","Popup","useMap","render","axios","L","position","treePositions","icon","iconSize","iconAnchor","popupAnchor","iconUrl","shadowUrl","getTheTrees","get","then","response","allTrees","data","map","item","index","latLong","push","point","coordinates","catch","error","console","App","trees","setTrees","TreeMarkers"],"sources":["/Users/aubreyblair-pattison/projects/heritageTrees/calgary-trees/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { Component, useEffect, useState } from 'react';\nimport {MapContainer, TileLayer, Marker, Popup, useMap} from 'react-leaflet'\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport L from \"leaflet\"\n// import 'leaflet/dist/leaflet.css'\n//import Trees from './data/trees.js';\n\nconst position = [51.047, -114.050];\nconst treePositions = [];\n\nconst icon = L.icon({\n  iconSize: [25, 41],\n  iconAnchor: [10, 41],\n  popupAnchor: [2, -40],\n  iconUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-shadow.png\"\n});\n\nconst getTheTrees = () => {\n  axios.get(\"https://data.calgary.ca/resource/tfs4-3wwa.json\")\n  .then((response) => {\n    const allTrees = response.data;\n    allTrees.map((item, index) => {\n      let latLong = [];\n      latLong.push(item.point.coordinates[1]);\n      latLong.push(item.point.coordinates[0]);\n      treePositions.push(latLong)\n    })\n    //setTrees(allTrees);\n  })\n  .catch(error => console.error(`Error: ${error}`));\n}\nfunction App() {\n  const [trees, setTrees] = useState([])\n\n  useEffect(() => {\n    getTheTrees();\n  },[])\n\n \n\n  //console.log(treePositions[0])\n//trees.data.map((item) => console.log(item.point.coordinates));\n  \n\n  function TreeMarkers() {\n    return treePositions.map((coordinates, index) => {\n      return <Marker key={index} position={coordinates} icon={icon}> </Marker>\n    });\n  }\n\n  // if(treePositions.length > 0) {\n  //   return (\n  //       // trees.map((treePositions, index) => {\n  //       //   // console.log(tree.point.coordinates);\n  //       //   // let position = tree.point.coordinates\n  //       // return(\n  //       //   // <div key={index}>\n  //       //   //   HAPPY TREES DANCE\n  //       //   // </div>\n  //       //   <div id=\"map\" key={index}>\n  //       //   <MapContainer \n  //       //       center={[51.047, -114.059]} \n  //       //       zoom={14} \n  //       //       scrollWheelZoom={true} \n  //       //       style= {{width: '50 vw', height: '50vh'}}>\n  //       //     <TileLayer\n  //       //     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  //       //     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  //       //     />\n  //       //     <Marker position={position}>\n  //       //       <Popup>\n  //       //         popup here\n  //       //       </Popup>\n  //       //     </Marker>\n  //       //   </MapContainer>\n  //       // </div>\n  //      )\n  // } else {\n  //   return (\n  //     <div>sorry, no trees yet, eh</div>\n  //   )\n  // }\n  // //   <>\n  // //     <p>Hello, werld</p>\n  // //     {/* {trees.data.map((item) => {\n  // //       return(<li> {item.point.coordinates}</li>)\n  // //     })} */}\n  // //     <p trees={trees}>  </p>\n  // //     {/* <p > Trees List </p> {trees.data.map((item, index) => <ol key={index}> Tree: {item.point.coordinates} </ol>)} */}\n  // //   </>\n\n\n}\n\nexport default App;\n\n\n// export class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: []\n//     };\n//   }\n\n//   componentDidMount() {\n//     axios.get(\"https://data.calgary.ca/resource/tfs4-3wwa.json\")\n//       .then(response => {\n//         const data = response.data;\n//         this.setState({ data })\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       })\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {this.state.map((item, index) => <TreeList key={index}{...item} />)}\n//       </div>\n//     )\n//   }\n// }\n\n// const TreeList = (props) => (\n//   <p> {props}</p>\n// )\n\n// render(<App />, document.getElementById('root'));\n\n\n\n\n// function App() {\n\n//   return (\n//     <>\n//     <div>\n//     <div id=\"map\"></div>\n//     </div>\n    // <div id=\"map\">\n    //    <MapContainer \n    //       center={[51.047, -114.059]} \n    //       zoom={14} \n    //       scrollWheelZoom={false} \n    //       style= {{width: '50 vw', height: '50vh'}}>\n    //     <TileLayer\n    //     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    //     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    //     />\n    //     <Marker position={position}>\n    //       <Popup>\n    //         popup here\n    //       </Popup>\n    //     </Marker>\n    //   </MapContainer>\n    // </div>\n    \n//       <Trees /> \n//     </>\n\n\n\n//   );\n// }\n\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAAQC,YAAR,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,MAAhD,QAA6D,eAA7D;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,SAAd,C,CACA;AACA;;;AAEA,MAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,CAAC,OAAV,CAAjB;AACA,MAAMC,aAAa,GAAG,EAAtB;AAEA,MAAMC,IAAI,GAAGH,CAAC,CAACG,IAAF,CAAO;EAClBC,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CADQ;EAElBC,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAFM;EAGlBC,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CAHK;EAIlBC,OAAO,EAAE,2DAJS;EAKlBC,SAAS,EAAE;AALO,CAAP,CAAb;;AAQA,MAAMC,WAAW,GAAG,MAAM;EACxBV,KAAK,CAACW,GAAN,CAAU,iDAAV,EACCC,IADD,CACOC,QAAD,IAAc;IAClB,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;IACAD,QAAQ,CAACE,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAC5B,IAAIC,OAAO,GAAG,EAAd;MACAA,OAAO,CAACC,IAAR,CAAaH,IAAI,CAACI,KAAL,CAAWC,WAAX,CAAuB,CAAvB,CAAb;MACAH,OAAO,CAACC,IAAR,CAAaH,IAAI,CAACI,KAAL,CAAWC,WAAX,CAAuB,CAAvB,CAAb;MACAnB,aAAa,CAACiB,IAAd,CAAmBD,OAAnB;IACD,CALD,EAFkB,CAQlB;EACD,CAVD,EAWCI,KAXD,CAWOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAe,UAASA,KAAM,EAA9B,CAXhB;AAYD,CAbD;;AAcA,SAASE,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACdkB,WAAW;EACZ,CAFQ,EAEP,EAFO,CAAT,CAHa,CASb;EACF;;EAGE,SAASmB,WAAT,GAAuB;IACrB,OAAO1B,aAAa,CAACa,GAAd,CAAkB,CAACM,WAAD,EAAcJ,KAAd,KAAwB;MAC/C,oBAAO,QAAC,MAAD;QAAoB,QAAQ,EAAEI,WAA9B;QAA2C,IAAI,EAAElB,IAAjD;QAAA;MAAA,GAAac,KAAb;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFM,CAAP;EAGD,CAjBY,CAmBb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAGD;;GA7DQQ,G;;KAAAA,G;AA+DT,eAAeA,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AAIA;AACA"},"metadata":{},"sourceType":"module"}